import { animate, animateChild, animation, group, keyframes, query, style, transition, trigger, useAnimation } from '@angular/animations';
const jackInTheBox = animation(group([
    animate('{{duration}}ms {{delay}}ms', keyframes([
        style({ 'transform-origin': 'center bottom', transform: 'scale(0.1) rotate(30deg)', easing: 'ease', offset: 0 }),
        style({ 'transform-origin': 'center bottom', transform: 'rotate(-10deg)', easing: 'ease', offset: 0.5 }),
        style({ 'transform-origin': 'center bottom', transform: 'rotate(3deg)', easing: 'ease', offset: 0.7 }),
        style({ 'transform-origin': 'center bottom', transform: 'scale(1)', easing: 'ease', offset: 1 })
    ])),
    animate('{{duration}}ms {{delay}}ms', keyframes([style({ visibility: 'visible', opacity: 0, offset: 0 }), style({ opacity: 1, offset: 1 })]))
]));
const DEFAULT_DURATION = 1000;
export function jackInTheBoxAnimation(options) {
    return trigger((options && options.anchor) || 'jackInTheBox', [
        transition('0 => 1', [
            ...(options && options.animateChildren === 'before' ? [query('@*', animateChild(), { optional: true })] : []),
            group([
                useAnimation(jackInTheBox),
                ...(!options || !options.animateChildren || options.animateChildren === 'together'
                    ? [query('@*', animateChild(), { optional: true })]
                    : [])
            ]),
            ...(options && options.animateChildren === 'after' ? [query('@*', animateChild(), { optional: true })] : [])
        ], {
            params: {
                delay: (options && options.delay) || 0,
                duration: (options && options.duration) || DEFAULT_DURATION
            }
        })
    ]);
}
export function jackInTheBoxOnEnterAnimation(options) {
    return trigger((options && options.anchor) || 'jackInTheBoxOnEnter', [
        transition(':enter', [
            style({ visibility: 'hidden' }),
            ...(options && options.animateChildren === 'before' ? [query('@*', animateChild(), { optional: true })] : []),
            group([
                useAnimation(jackInTheBox),
                ...(!options || !options.animateChildren || options.animateChildren === 'together'
                    ? [query('@*', animateChild(), { optional: true })]
                    : [])
            ]),
            ...(options && options.animateChildren === 'after' ? [query('@*', animateChild(), { optional: true })] : [])
        ], {
            params: {
                delay: (options && options.delay) || 0,
                duration: (options && options.duration) || DEFAULT_DURATION
            }
        })
    ]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamFjay1pbi10aGUtYm94LmFuaW1hdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItYW5pbWF0aW9ucy8iLCJzb3VyY2VzIjpbInNwZWNpYWxzL2phY2staW4tdGhlLWJveC5hbmltYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLE9BQU8sRUFDUCxZQUFZLEVBQ1osU0FBUyxFQUVULEtBQUssRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLEtBQUssRUFDTCxVQUFVLEVBQ1YsT0FBTyxFQUNQLFlBQVksRUFDYixNQUFNLHFCQUFxQixDQUFDO0FBSTdCLE1BQU0sWUFBWSxHQUFHLFNBQVMsQ0FDNUIsS0FBSyxDQUFDO0lBQ0osT0FBTyxDQUNMLDRCQUE0QixFQUM1QixTQUFTLENBQUM7UUFDUixLQUFLLENBQUMsRUFBRSxrQkFBa0IsRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO1FBQ2hILEtBQUssQ0FBQyxFQUFFLGtCQUFrQixFQUFFLGVBQWUsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDeEcsS0FBSyxDQUFDLEVBQUUsa0JBQWtCLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDdEcsS0FBSyxDQUFDLEVBQUUsa0JBQWtCLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7S0FDakcsQ0FBQyxDQUNIO0lBQ0QsT0FBTyxDQUNMLDRCQUE0QixFQUM1QixTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxVQUFVLEVBQUUsU0FB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USxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1NBQzdHLEVBQ0Q7WUFDRSxNQUFNLEVBQUU7Z0JBQ04sS0FBSyxFQUFFLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO2dCQUN0QyxRQUFRLEVBQUUsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLGdCQUFnQjthQUM1RDtTQUNGLENBQ0Y7S0FDRixDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYW5pbWF0ZSxcbiAgYW5pbWF0ZUNoaWxkLFxuICBhbmltYXRpb24sXG4gIEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YSxcbiAgZ3JvdXAsXG4gIGtleWZyYW1lcyxcbiAgcXVlcnksXG4gIHN0eWxlLFxuICB0cmFuc2l0aW9uLFxuICB0cmlnZ2VyLFxuICB1c2VBbmltYXRpb25cbn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5cbmltcG9ydCB7IElBbmltYXRpb25PcHRpb25zIH0gZnJvbSAnLi4vY29tbW9uL2ludGVyZmFjZXMnO1xuXG5jb25zdCBqYWNrSW5UaGVCb3ggPSBhbmltYXRpb24oXG4gIGdyb3VwKFtcbiAgICBhbmltYXRlKFxuICAgICAgJ3t7ZHVyYXRpb259fW1zIHt7ZGVsYXl9fW1zJyxcbiAgICAgIGtleWZyYW1lcyhbXG4gICAgICAgIHN0eWxlKHsgJ3RyYW5zZm9ybS1vcmlnaW4nOiAnY2VudGVyIGJvdHRvbScsIHRyYW5zZm9ybTogJ3NjYWxlKDAuMSkgcm90YXRlKDMwZGVnKScsIGVhc2luZzogJ2Vhc2UnLCBvZmZzZXQ6IDAgfSksXG4gICAgICAgIHN0eWxlKHsgJ3RyYW5zZm9ybS1vcmlnaW4nOiAnY2VudGVyIGJvdHRvbScsIHRyYW5zZm9ybTogJ3JvdGF0ZSgtMTBkZWcpJywgZWFzaW5nOiAnZWFzZScsIG9mZnNldDogMC41IH0pLFxuICAgICAgICBzdHlsZSh7ICd0cmFuc2Zvcm0tb3JpZ2luJzogJ2NlbnRlciBib3R0b20nLCB0cmFuc2Zvcm06ICdyb3RhdGUoM2RlZyknLCBlYXNpbmc6ICdlYXNlJywgb2Zmc2V0OiAwLjcgfSksXG4gICAgICAgIHN0eWxlKHsgJ3RyYW5zZm9ybS1vcmlnaW4nOiAnY2VudGVyIGJvdHRvbScsIHRyYW5zZm9ybTogJ3NjYWxlKDEpJywgZWFzaW5nOiAnZWFzZScsIG9mZnNldDogMSB9KVxuICAgICAgXSlcbiAgICApLFxuICAgIGFuaW1hdGUoXG4gICAgICAne3tkdXJhdGlvbn19bXMge3tkZWxheX19bXMnLFxuICAgICAga2V5ZnJhbWVzKFtzdHlsZSh7IHZpc2liaWxpdHk6ICd2aXNpYmxlJywgb3BhY2l0eTogMCwgb2Zmc2V0OiAwIH0pLCBzdHlsZSh7IG9wYWNpdHk6IDEsIG9mZnNldDogMSB9KV0pXG4gICAgKVxuICBdKVxuKTtcblxuY29uc3QgREVGQVVMVF9EVVJBVElPTiA9IDEwMDA7XG5cbmV4cG9ydCBmdW5jdGlvbiBqYWNrSW5UaGVCb3hBbmltYXRpb24ob3B0aW9ucz86IElBbmltYXRpb25PcHRpb25zKTogQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhIHtcbiAgcmV0dXJuIHRyaWdnZXIoKG9wdGlvbnMgJiYgb3B0aW9ucy5hbmNob3IpIHx8ICdqYWNrSW5UaGVCb3gnLCBbXG4gICAgdHJhbnNpdGlvbihcbiAgICAgICcwID0+IDEnLFxuICAgICAgW1xuICAgICAgICAuLi4ob3B0aW9ucyAmJiBvcHRpb25zLmFuaW1hdGVDaGlsZHJlbiA9PT0gJ2JlZm9yZScgPyBbcXVlcnkoJ0AqJywgYW5pbWF0ZUNoaWxkKCksIHsgb3B0aW9uYWw6IHRydWUgfSldIDogW10pLFxuICAgICAgICBncm91cChbXG4gICAgICAgICAgdXNlQW5pbWF0aW9uKGphY2tJblRoZUJveCksXG4gICAgICAgICAgLi4uKCFvcHRpb25zIHx8ICFvcHRpb25zLmFuaW1hdGVDaGlsZHJlbiB8fCBvcHRpb25zLmFuaW1hdGVDaGlsZHJlbiA9PT0gJ3RvZ2V0aGVyJ1xuICAgICAgICAgICAgPyBbcXVlcnkoJ0AqJywgYW5pbWF0ZUNoaWxkKCksIHsgb3B0aW9uYWw6IHRydWUgfSldXG4gICAgICAgICAgICA6IFtdKVxuICAgICAgICBdKSxcbiAgICAgICAgLi4uKG9wdGlvbnMgJiYgb3B0aW9ucy5hbmltYXRlQ2hpbGRyZW4gPT09ICdhZnRlcicgPyBbcXVlcnkoJ0AqJywgYW5pbWF0ZUNoaWxkKCksIHsgb3B0aW9uYWw6IHRydWUgfSldIDogW10pXG4gICAgICBdLFxuICAgICAge1xuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICBkZWxheTogKG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxheSkgfHwgMCxcbiAgICAgICAgICBkdXJhdGlvbjogKG9wdGlvbnMgJiYgb3B0aW9ucy5kdXJhdGlvbikgfHwgREVGQVVMVF9EVVJBVElPTlxuICAgICAgICB9XG4gICAgICB9XG4gICAgKVxuICBdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGphY2tJblRoZUJveE9uRW50ZXJBbmltYXRpb24ob3B0aW9ucz86IElBbmltYXRpb25PcHRpb25zKTogQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhIHtcbiAgcmV0dXJuIHRyaWdnZXIoKG9wdGlvbnMgJiYgb3B0aW9ucy5hbmNob3IpIHx8ICdqYWNrSW5UaGVCb3hPbkVudGVyJywgW1xuICAgIHRyYW5zaXRpb24oXG4gICAgICAnOmVudGVyJyxcbiAgICAgIFtcbiAgICAgICAgc3R5bGUoeyB2aXNpYmlsaXR5OiAnaGlkZGVuJyB9KSxcbiAgICAgICAgLi4uKG9wdGlvbnMgJiYgb3B0aW9ucy5hbmltYXRlQ2hpbGRyZW4gPT09ICdiZWZvcmUnID8gW3F1ZXJ5KCdAKicsIGFuaW1hdGVDaGlsZCgpLCB7IG9wdGlvbmFsOiB0cnVlIH0pXSA6IFtdKSxcbiAgICAgICAgZ3JvdXAoW1xuICAgICAgICAgIHVzZUFuaW1hdGlvbihqYWNrSW5UaGVCb3gpLFxuICAgICAgICAgIC4uLighb3B0aW9ucyB8fCAhb3B0aW9ucy5hbmltYXRlQ2hpbGRyZW4gfHwgb3B0aW9ucy5hbmltYXRlQ2hpbGRyZW4gPT09ICd0b2dldGhlcidcbiAgICAgICAgICAgID8gW3F1ZXJ5KCdAKicsIGFuaW1hdGVDaGlsZCgpLCB7IG9wdGlvbmFsOiB0cnVlIH0pXVxuICAgICAgICAgICAgOiBbXSlcbiAgICAgICAgXSksXG4gICAgICAgIC4uLihvcHRpb25zICYmIG9wdGlvbnMuYW5pbWF0ZUNoaWxkcmVuID09PSAnYWZ0ZXInID8gW3F1ZXJ5KCdAKicsIGFuaW1hdGVDaGlsZCgpLCB7IG9wdGlvbmFsOiB0cnVlIH0pXSA6IFtdKVxuICAgICAgXSxcbiAgICAgIHtcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgZGVsYXk6IChvcHRpb25zICYmIG9wdGlvbnMuZGVsYXkpIHx8IDAsXG4gICAgICAgICAgZHVyYXRpb246IChvcHRpb25zICYmIG9wdGlvbnMuZHVyYXRpb24pIHx8IERFRkFVTFRfRFVSQVRJT05cbiAgICAgICAgfVxuICAgICAgfVxuICAgIClcbiAgXSk7XG59XG4iXX0=